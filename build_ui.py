import base64
import os

def create_builder_payload(source_file, target_file, key, builder_instance_name):
    print(f"Compiling {source_file} -> {target_file}...")
    with open(source_file, 'r') as f:
        content = f.read().replace('\n', ' ')

    chunk_size = 70
    chunks = [content[i:i + chunk_size] for i in range(0, len(content), chunk_size)]
    
    with open(target_file, 'w') as f:
        f.write("# This file is auto-generated by build_ui.py. DO NOT EDIT.\n")
        f.write("from shared.builder import ContentBuilder\n\n")
        f.write(f'{builder_instance_name} = ContentBuilder(key="{key}")\n')
        
        for chunk in chunks:
            encrypted_chars = [chr(ord(chunk[i]) ^ ord(key[i % len(key)])) for i in range(len(chunk))]
            encoded_chunk = base64.b64encode("".join(encrypted_chars).encode('utf-8')).decode('utf-8')
            f.write(f'{builder_instance_name}.a("{encoded_chunk}")\n')
    print("âœ… Compilation successful.")

if __name__ == "__main__":
    os.makedirs("shop_app", exist_ok=True)
    create_builder_payload(
        source_file="ui_source/shop_layout.html",
        target_file="shop_app/layout_payload.py",
        key="LayoutMasterKey2024",
        builder_instance_name="layout_builder"
    )
    create_builder_payload(
        source_file="ui_source/shop_content.html",
        target_file="shop_app/content_payload.py",
        key="PUP-Sinta-2024-IskolarNgBayan",
        builder_instance_name="content_builder"
    )